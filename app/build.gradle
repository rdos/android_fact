apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android.defaultConfig.ndk.debugSymbolLevel = 'FULL'

android {
    compileSdkVersion 32
    buildToolsVersion "32.1.0-rc1"
    buildFeatures {
        viewBinding = true
    }

    defaultConfig {
        applicationId "ru.smartro.worknote"
        minSdkVersion 26
        targetSdkVersion 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        //устанавливаем версию
        def Properties props = new Properties()
        def propFile = file("$projectDir/../VERSION")
        if (propFile.canRead()){
            props.load(new FileInputStream(propFile))

            if (props!=null && props.containsKey('version.code')) {
                versionCode = props['version.code'].toInteger()
            }

            if (props!=null && props.containsKey('version.name')) {
                versionName = props['version.name']
            }
        }

        setProperty("archivesBaseName", "Fact-" + defaultConfig.versionName + "-")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        //след
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD

            // Optional, specify signing versions used
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }


    buildTypes {
        debug {
            applicationIdSuffix '.stage'
            versionNameSuffix '-STAGE'
            resValue "string", "app_name", "Fact.STAGE"
            signingConfig signingConfigs.release
        }

        release {
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Fact"
            minifyEnabled false

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debugRC {
            applicationIdSuffix '.rc'
            versionNameSuffix '-RC'
            resValue "string", "app_name", "Fact.RC"
            signingConfig signingConfigs.release
            debuggable true
        }
        debugProd {
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Fact"
            debuggable true
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.0"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
//    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    //Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
    implementation 'id.zelory:compressor:3.0.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    /* Koin DI */
    implementation "org.koin:koin-android:2.0.1"
    implementation "org.koin:koin-androidx-scope:2.0.1"
    implementation "org.koin:koin-androidx-viewmodel:2.0.1"

    //design
    implementation 'com.google.android.material:material:1.6.1'

    //LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0-rc02'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //yandex map
    implementation 'com.yandex.android:maps.mobile:4.0.0-full'

    //expandable layout
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'

    // CameraX core library
    implementation "androidx.camera:camera-core:1.2.0-alpha01"
    implementation "androidx.camera:camera-camera2:1.2.0-alpha01"
    implementation "androidx.camera:camera-lifecycle:1.2.0-alpha01"
    implementation 'androidx.camera:camera-view:1.2.0-alpha01'

    implementation 'androidx.camera:camera-extensions:1.2.0-alpha01'
// https://mvnrepository.com/artifact/com.yandex.android/speechkit
//    implementation("com.yandex.android:speechkit:3.12.2")

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'

    implementation "androidx.work:work-runtime-ktx:2.7.1"

    implementation "io.sentry:sentry-android:6.1.4"
    implementation "io.sentry:sentry-android-okhttp:6.1.4"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.4.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.4.2"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    implementation 'com.github.amit12297:VerticalChipGroupAndroid:1.0'
}
