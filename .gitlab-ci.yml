variables:
  URL: "https://api.telegram.org/bot$TELEGRAM_API_TOKEN/sendMessage"

.publish-apk: &publish-apk |
  curl -H "Authorization: token ${DEPLOYGATE_TOKEN}" -F "file=@${APK}" -F "message=$CI_COMMIT_MESSAGE" "https://deploygate.com/api/users/develsoyuz/apps"

stages:
  - build
  - notify

# send telegramm notifications on pipeline status
.notification_template: &notifi
  stage: notify
  image: curlimages/curl
  tags:
    - docker
  script: curl -s --max-time 10 -d "chat_id=$TELEGRAM_CHAT_ID&disable_web_page_preview=1&text=$TEXT" $URL

build:
  tags:
    - docker
  stage: build
  image: registry.gitlab.smartro.ru:5005/infra/docker:android
  before_script:
    - chmod +x ./gradlew
    - sed -i 's|__VERSION_CODE__|'"$CI_PIPELINE_ID"'|g' ./VERSION
    - sed -i 's|__VERSION_NAME__|'"$CI_COMMIT_TAG"'|g' ./VERSION
  script:
    - ./gradlew clean assembleDebug
    - ./gradlew assembleDebugRC
    - cd "app/build/outputs/apk/debug/"
    - export APK=$(ls | grep apk)
    - *publish-apk
    - cd "../debugRC/"
    - export APK=$(ls | grep apk)
    - *publish-apk
  only:
    - tags

notification_on_success:
  <<: *notifi
  variables:
    TEXT: "Deploy status: ✅%0AProject:+$CI_PROJECT_NAME%0ACommit_message:${CI_COMMIT_MESSAGE}%0AURL:+$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID/%0ABranch:+$CI_COMMIT_REF_SLUG"
  when: on_success
  needs:
    - job: build
#notification_on_failure:
#  <<: *notifi
#  variables:
#    TEXT: "Deploy status: ❌%0AProject:+$CI_PROJECT_NAME%0AURL:+$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID/%0ABranch:+$CI_COMMIT_REF_SLUG"
#  when: on_failure
